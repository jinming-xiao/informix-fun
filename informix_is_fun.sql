-- setenv DBACCESS_COLUMNS 180
-- dbaccess test informix_is_fun.sql
-- output to "/tmp/x" without headings 

with fonts(c, c1, c2,c3,c4,c5,c6,c7,c8) as (
-- public domain 8x8 VGA fonts
select * from table(multiset{
ROW(' ', '0x00', '0x00', '0x00', '0x00', '0x00', '0x00', '0x00', '0x00'),
ROW('!', '0x18', '0x3C', '0x3C', '0x18', '0x18', '0x00', '0x18', '0x00'),
ROW('"', '0x36', '0x36', '0x00', '0x00', '0x00', '0x00', '0x00', '0x00'),
ROW('#', '0x36', '0x36', '0x7F', '0x36', '0x7F', '0x36', '0x36', '0x00'),
ROW('$', '0x0C', '0x3E', '0x03', '0x1E', '0x30', '0x1F', '0x0C', '0x00'),
ROW('%', '0x00', '0x63', '0x33', '0x18', '0x0C', '0x66', '0x63', '0x00'),
ROW('&', '0x1C', '0x36', '0x1C', '0x6E', '0x3B', '0x33', '0x6E', '0x00'),
ROW("'", '0x06', '0x06', '0x03', '0x00', '0x00', '0x00', '0x00', '0x00'),
ROW('(', '0x18', '0x0C', '0x06', '0x06', '0x06', '0x0C', '0x18', '0x00'),
ROW(')', '0x06', '0x0C', '0x18', '0x18', '0x18', '0x0C', '0x06', '0x00'),
ROW('*', '0x00', '0x66', '0x3C', '0xFF', '0x3C', '0x66', '0x00', '0x00'),
ROW('+', '0x00', '0x0C', '0x0C', '0x3F', '0x0C', '0x0C', '0x00', '0x00'),
ROW(',', '0x00', '0x00', '0x00', '0x00', '0x00', '0x0C', '0x0C', '0x06'),
ROW('-', '0x00', '0x00', '0x00', '0x3F', '0x00', '0x00', '0x00', '0x00'),
ROW('.', '0x00', '0x00', '0x00', '0x00', '0x00', '0x0C', '0x0C', '0x00'),
ROW('/', '0x60', '0x30', '0x18', '0x0C', '0x06', '0x03', '0x01', '0x00'),
ROW('0', '0x3E', '0x63', '0x73', '0x7B', '0x6F', '0x67', '0x3E', '0x00'),
ROW('1', '0x0C', '0x0E', '0x0C', '0x0C', '0x0C', '0x0C', '0x3F', '0x00'),
ROW('2', '0x1E', '0x33', '0x30', '0x1C', '0x06', '0x33', '0x3F', '0x00'),
ROW('3', '0x1E', '0x33', '0x30', '0x1C', '0x30', '0x33', '0x1E', '0x00'),
ROW('4', '0x38', '0x3C', '0x36', '0x33', '0x7F', '0x30', '0x78', '0x00'),
ROW('5', '0x3F', '0x03', '0x1F', '0x30', '0x30', '0x33', '0x1E', '0x00'),
ROW('6', '0x1C', '0x06', '0x03', '0x1F', '0x33', '0x33', '0x1E', '0x00'),
ROW('7', '0x3F', '0x33', '0x30', '0x18', '0x0C', '0x0C', '0x0C', '0x00'),
ROW('8', '0x1E', '0x33', '0x33', '0x1E', '0x33', '0x33', '0x1E', '0x00'),
ROW('9', '0x1E', '0x33', '0x33', '0x3E', '0x30', '0x18', '0x0E', '0x00'),
ROW(':', '0x00', '0x0C', '0x0C', '0x00', '0x00', '0x0C', '0x0C', '0x00'),
ROW('/', '0x00', '0x0C', '0x0C', '0x00', '0x00', '0x0C', '0x0C', '0x06'),
ROW('<', '0x18', '0x0C', '0x06', '0x03', '0x06', '0x0C', '0x18', '0x00'),
ROW('=', '0x00', '0x00', '0x3F', '0x00', '0x00', '0x3F', '0x00', '0x00'),
ROW('>', '0x06', '0x0C', '0x18', '0x30', '0x18', '0x0C', '0x06', '0x00'),
ROW('?', '0x1E', '0x33', '0x30', '0x18', '0x0C', '0x00', '0x0C', '0x00'),
ROW('@', '0x3E', '0x63', '0x7B', '0x7B', '0x7B', '0x03', '0x1E', '0x00'),
ROW('A', '0x0C', '0x1E', '0x33', '0x33', '0x3F', '0x33', '0x33', '0x00'),
ROW('B', '0x3F', '0x66', '0x66', '0x3E', '0x66', '0x66', '0x3F', '0x00'),
ROW('C', '0x3C', '0x66', '0x03', '0x03', '0x03', '0x66', '0x3C', '0x00'),
ROW('D', '0x1F', '0x36', '0x66', '0x66', '0x66', '0x36', '0x1F', '0x00'),
ROW('E', '0x7F', '0x46', '0x16', '0x1E', '0x16', '0x46', '0x7F', '0x00'),
ROW('F', '0x7F', '0x46', '0x16', '0x1E', '0x16', '0x06', '0x0F', '0x00'),
ROW('G', '0x3C', '0x66', '0x03', '0x03', '0x73', '0x66', '0x7C', '0x00'),
ROW('H', '0x33', '0x33', '0x33', '0x3F', '0x33', '0x33', '0x33', '0x00'),
ROW('I', '0x1E', '0x0C', '0x0C', '0x0C', '0x0C', '0x0C', '0x1E', '0x00'),
ROW('J', '0x78', '0x30', '0x30', '0x30', '0x33', '0x33', '0x1E', '0x00'),
ROW('K', '0x67', '0x66', '0x36', '0x1E', '0x36', '0x66', '0x67', '0x00'),
ROW('L', '0x0F', '0x06', '0x06', '0x06', '0x46', '0x66', '0x7F', '0x00'),
ROW('M', '0x63', '0x77', '0x7F', '0x7F', '0x6B', '0x63', '0x63', '0x00'),
ROW('N', '0x63', '0x67', '0x6F', '0x7B', '0x73', '0x63', '0x63', '0x00'),
ROW('O', '0x1C', '0x36', '0x63', '0x63', '0x63', '0x36', '0x1C', '0x00'),
ROW('P', '0x3F', '0x66', '0x66', '0x3E', '0x06', '0x06', '0x0F', '0x00'),
ROW('Q', '0x1E', '0x33', '0x33', '0x33', '0x3B', '0x1E', '0x38', '0x00'),
ROW('R', '0x3F', '0x66', '0x66', '0x3E', '0x36', '0x66', '0x67', '0x00'),
ROW('S', '0x1E', '0x33', '0x07', '0x0E', '0x38', '0x33', '0x1E', '0x00'),
ROW('T', '0x3F', '0x2D', '0x0C', '0x0C', '0x0C', '0x0C', '0x1E', '0x00'),
ROW('U', '0x33', '0x33', '0x33', '0x33', '0x33', '0x33', '0x3F', '0x00'),
ROW('V', '0x33', '0x33', '0x33', '0x33', '0x33', '0x1E', '0x0C', '0x00'),
ROW('W', '0x63', '0x63', '0x63', '0x6B', '0x7F', '0x77', '0x63', '0x00'),
ROW('X', '0x63', '0x63', '0x36', '0x1C', '0x1C', '0x36', '0x63', '0x00'),
ROW('Y', '0x33', '0x33', '0x33', '0x1E', '0x0C', '0x0C', '0x1E', '0x00'),
ROW('Z', '0x7F', '0x63', '0x31', '0x18', '0x4C', '0x66', '0x7F', '0x00'),
ROW('[', '0x1E', '0x06', '0x06', '0x06', '0x06', '0x06', '0x1E', '0x00'),
ROW('\', '0x03', '0x06', '0x0C', '0x18', '0x30', '0x60', '0x40', '0x00'),
ROW(']', '0x1E', '0x18', '0x18', '0x18', '0x18', '0x18', '0x1E', '0x00'),
ROW('^', '0x08', '0x1C', '0x36', '0x63', '0x00', '0x00', '0x00', '0x00'),
ROW('_', '0x00', '0x00', '0x00', '0x00', '0x00', '0x00', '0x00', '0xFF'),
ROW('`', '0x0C', '0x0C', '0x18', '0x00', '0x00', '0x00', '0x00', '0x00'),
ROW('a', '0x00', '0x00', '0x1E', '0x30', '0x3E', '0x33', '0x6E', '0x00'),
ROW('b', '0x07', '0x06', '0x06', '0x3E', '0x66', '0x66', '0x3B', '0x00'),
ROW('c', '0x00', '0x00', '0x1E', '0x33', '0x03', '0x33', '0x1E', '0x00'),
ROW('d', '0x38', '0x30', '0x30', '0x3e', '0x33', '0x33', '0x6E', '0x00'),
ROW('e', '0x00', '0x00', '0x1E', '0x33', '0x3f', '0x03', '0x1E', '0x00'),
ROW('f', '0x1C', '0x36', '0x06', '0x0f', '0x06', '0x06', '0x0F', '0x00'),
ROW('g', '0x00', '0x00', '0x6E', '0x33', '0x33', '0x3E', '0x30', '0x1F'),
ROW('h', '0x07', '0x06', '0x36', '0x6E', '0x66', '0x66', '0x67', '0x00'),
ROW('i', '0x0C', '0x00', '0x0E', '0x0C', '0x0C', '0x0C', '0x1E', '0x00'),
ROW('j', '0x30', '0x00', '0x30', '0x30', '0x30', '0x33', '0x33', '0x1E'),
ROW('k', '0x07', '0x06', '0x66', '0x36', '0x1E', '0x36', '0x67', '0x00'),
ROW('l', '0x0E', '0x0C', '0x0C', '0x0C', '0x0C', '0x0C', '0x1E', '0x00'),
ROW('m', '0x00', '0x00', '0x33', '0x7F', '0x7F', '0x6B', '0x63', '0x00'),
ROW('n', '0x00', '0x00', '0x1F', '0x33', '0x33', '0x33', '0x33', '0x00'),
ROW('o', '0x00', '0x00', '0x1E', '0x33', '0x33', '0x33', '0x1E', '0x00'),
ROW('p', '0x00', '0x00', '0x3B', '0x66', '0x66', '0x3E', '0x06', '0x0F'),
ROW('q', '0x00', '0x00', '0x6E', '0x33', '0x33', '0x3E', '0x30', '0x78'),
ROW('r', '0x00', '0x00', '0x3B', '0x6E', '0x66', '0x06', '0x0F', '0x00'),
ROW('s', '0x00', '0x00', '0x3E', '0x03', '0x1E', '0x30', '0x1F', '0x00'),
ROW('t', '0x08', '0x0C', '0x3E', '0x0C', '0x0C', '0x2C', '0x18', '0x00'),
ROW('u', '0x00', '0x00', '0x33', '0x33', '0x33', '0x33', '0x6E', '0x00'),
ROW('v', '0x00', '0x00', '0x33', '0x33', '0x33', '0x1E', '0x0C', '0x00'),
ROW('w', '0x00', '0x00', '0x63', '0x6B', '0x7F', '0x7F', '0x36', '0x00'),
ROW('x', '0x00', '0x00', '0x63', '0x36', '0x1C', '0x36', '0x63', '0x00'),
ROW('y', '0x00', '0x00', '0x33', '0x33', '0x33', '0x3E', '0x30', '0x1F'),
ROW('z', '0x00', '0x00', '0x3F', '0x19', '0x0C', '0x26', '0x3F', '0x00'),
ROW('{', '0x38', '0x0C', '0x0C', '0x07', '0x0C', '0x0C', '0x38', '0x00'),
ROW('|', '0x18', '0x18', '0x18', '0x00', '0x18', '0x18', '0x18', '0x00'),
ROW('}', '0x07', '0x0C', '0x0C', '0x38', '0x0C', '0x0C', '0x07', '0x00'),
ROW('~', '0x6E', '0x3B', '0x00', '0x00', '0x00', '0x00', '0x00', '0x00')})),
text(str) as (
    -- change this to anything you like
    select 'Informix is Fun'
),
xword(str, o, c, c1, c2,c3,c4,c5,c6,c7,c8) as (
    select str, 1, c, c1, c2,c3,c4,c5,c6,c7,c8 
	from text, fonts where c = substr(str, 1, 1)
    union all
    select str, o+1, c, c1, c2,c3,c4,c5,c6,c7,c8 from fonts, xword
        where fonts.c = substr(str, o+1, 1) and o < length(str)
),
x(n, p) as (
    select 1, 128 union all select n+1, p/2 from x where n < 8
),
show as (
select 
        sum ((case when bitand(to_number(c1)::int, p) > 0 
                then '#' else ' ' end)::lvarchar)::char(8) as c1,
        sum ((case when bitand(to_number(c2)::int, p) > 0 
                then '#' else ' ' end)::lvarchar)::char(8) as c2,
        sum ((case when bitand(to_number(c3)::int, p) > 0 
                then '#' else ' ' end)::lvarchar)::char(8) as c3,
        sum ((case when bitand(to_number(c4)::int, p) > 0 
                then '#' else ' ' end)::lvarchar)::char(8) as c4,
        sum ((case when bitand(to_number(c5)::int, p) > 0 
                then '#' else ' ' end)::lvarchar)::char(8) as c5,
        sum ((case when bitand(to_number(c6)::int, p) > 0 
                then '#' else ' ' end)::lvarchar)::char(8) as c6,
        sum ((case when bitand(to_number(c7)::int, p) > 0 
                then '#' else ' ' end)::lvarchar)::char(8) as c7,
        sum ((case when bitand(to_number(c8)::int, p) > 0 
                then '#' else ' ' end)::lvarchar)::char(8) as c8
from x cross join xword
group by xword.o
order by xword.o desc
)
select  sum(c1::lvarchar) as _1, sum(c2::lvarchar) as _2,
	sum(c3::lvarchar) as _3, sum(c4::lvarchar) as _4,
	sum(c5::lvarchar) as _5, sum(c6::lvarchar) as _6,
	sum(c7::lvarchar) as _7, sum(c8::lvarchar) as _8 from show;
